package PrefixSum;

import java.util.ArrayList;
import java.util.List;

public class EquilibriumIndex {
    public static void main(String[] args) {
        ArrayList<Integer> B = new ArrayList<>(List.of(-4188, 1533, 2259, 2786, 3350, -5139, 7524, 9583, -1441, -8333, -6229, -1164, 3158, 7345, 683, 7336, -1717, -1433, 8972, -3467, -2139, -5812, -3423, 6651, -4163, 8186, 8842, 8414, -8554, -3320, 3480, 2190, -9736, -9012, 9114, 2392, -1715, 971, 753, 1259, -1586, -8268, -3387, 2130, 8403, 6187, 6131, 2135, -7563, 2855, 9381, 7580, -9098, 8910, -8424, 7077, -7858, -5402, -3572, 4749, 5919, 392, -999, -2427, 7988, -8203, 2337, 7226, -1787, -4033, 4694, -2383, -7958, 8052, 7786, -6839, 1200, 757, 3610, 9355, 7249, 8501, 1944, 8314, 3929, 9460, -4641, -1947, -6983, -273, -1903, -285, 6872, -4605, -4671, -5898, 1806, 6645, -4176, -1475, -5940, -7170, 8356, 7808, -9126, -5802, -3131, -4822, 6016, -9036, 1125, 8721, -6705, -1276, 4491, 2484, -1518, 1636, 462, -8080, -242, 6211, 2758, 4099, -585, -5557, 7738, 8222, 9023, 3573, -9304, 7344, -9300, 3337, -101, 4525, -7358, -4615, -8231, -2074, 9465, 7223, 3952, 8158, 7265, -8925, 6704, -6829, -3114, -5646, 3984, -5694, -7561, -4382, -7378, -5380, -1328, 5663, 8797, -4217, -4682, -1624, -1567, 4676, -3552, 4301, 5586, 550, -6917, -5849, 7599, 3162, 4023, 8122, 4595, -9310, -7935, -4388, -2500, 1668, -2962, -6186, 1774, -2466, -6493, -8061, 7503, -5493, 7179, -832, 4042, -3825, -3258, -9829, 3792, 9969, -1128, 1803, -6096, 1980, 4643, -7004, 5137, 6517, 5535, 6967, -5201, -9277, -8737, -7476, 2393, 14, -2202, 651, 8884, 1056, 5319, -2523, 9075, -137, -9885, 1226, -6097, 8276, 7231, 1923, -2161, 8522, -1709, -5950, 3757, 2729, -7615, 5400, 9973, 1532, 4829, -9353, -6631, -199, -8343, 9649, -7148, -4791, 1120, -6298, -6741, 1076, -9617, 8538, -2010, 6218, 8211, 9060, 2543, 9204, 1133, -9348, -2772, -8844, -1932, 6446, 7600, 7584, 5552, -2173, 7072, 5205, 6310, 1852, 1960, -4772, -8169, 2379, 6766, -685, 3975, -2666, 4680, -7059, 6008, 8687, -1096, 7641, 6988, 6320, 7795, -1936, 7294, -5243, -2959, -315, 7811, -6765, 7603, 953, -1083, -6705, -7804, 1905, -5532, 371, -4764, 5542, 924, -46, 9152, 7930, 1052, -6762, 4098, 2623, -8681, -9196, 2515, -7298, -8013, 6348, -8160, 2906, 9335, 8872, 7597, 9031, 5160, 6536, -3658, -444, -8531, -3731, -6596, 1897, -7074, -5699, -2655, -5208, 620, -1276, -6334, -5347, 9418, 5565, -9390, -2308, -5126, -2541, 7426, 7247, -1035, 5330, 99, 1643, 8612, 4491, 550, 9282, -8297, 9873, 6082, 2641, 4040, -2882, -2528, 3123, -4119, -4595, -8369, 1766, 7803, -5306, 8880, -5153, -2089, -3628, -7863, -4306, 7170, -3386, 522, 195, -158, -2538, 1184, -5767, -9940, -9083, -4627, 3470, -6675, -156, 161, -6296, -7424, 6726, -5902, -405, 4137, 1660, -3182, -3450, 8339, -4169, 3638, 9426, -2180, -480, 5232, -683, -3872, 3213, 10000, -5950, -1054, 7906, -796, 9363, -5733, -2570, -9551, -3883, 2632, 1712, -6182, 2968, 7422, -3516, -5569, 6577, -8828, -4128, 6419, 4303, 841, -1400, 7509, -1441, 9254, 9687, 5789, -4978, 7738, 9357, -6040, 2420, 5579, 1568, 9551, -9142, 4272, -8769, 1926, -9091, -1360, -7636, -2662, 1390, 2247, -6152, -8532, 5854, 9406, 2902, -5323, -574, -4553, 5283, 8334, 9325, 1771, 5730, -7429, -6576, -2863, 3807, 4127, -3212, -1295, -5007, -6329, -6957, 7760, -4102, 9785, -9361, 5829, 4225, -7382, 8812, 5452, -866, 4560, -8224, 2437, 9540, 1358, -9983, 7227, -6477, -7102, 583, 6878, 5280, 960, 9975, -7644, 8078, -3668, 8338, 2974, 761, 9289, 6634, 6564, 4079, 8765, 1468, -183, 1265, -5782, -7244, -3559, 8356, -4320, -648, -6302, -4285, 708, 9281, 4664, 8116, -4179, -8363, 2629, -371, -2696, -7791, 2551, 8670, -6122, -5916, 559, 2741, -6140, 10000, -900, 9107, -1896, -10, -6933, 2636, 9605, 7355, 6951, 2188, -1933, -2992, 7364, 8492, 505, -2170, -9533, 3725, -3021, 1736, -2094, 6569, 3450, 4611, 1185, -8203, 1483, 1119, -5567, -4438, 2271, 1298, 9587, -9554, 4400, -8619, 3705, 3626, -8429, 275, -3454, 9965, 4855, -3409, -6351, 1001, 8940, 1296, -3180, 5092, -2584, 1098, 6428, 6302, 5979, -2648, -4787, -942, -4215, 7095, -2888, -2693, 934, 7123, -7402, 2251, 7051, 7882, 2779, 6119, 792, 9496, -3704, -5281, -2230, 489, -336, 1490, -5216, 9256, -2558, -577, 4757, 3868, -7692, -4501, 6258, 8066, -553, 6097, 2573, 6937, 7012, -36, 952, -2563, 4239, -9189, -8440, 3625, 2155, 9170, 7021, -5935, -765, 4891, -2075, -250, -4857, 8303, 8676, 1925, -3364, 9423, 7808, 1356, -105, 8990, -1674, 3204, -4532, 1920, -8244, -3973, -6344, 9397, -2969, 9100, 9087, 2913, -5762, -4600, -9300, -2191, 8352, -6883, -6664, 8360, -3908, -9481, 9323, 727, -8245, -3543, 4533, -6360, 3197, -6480, -9296, 2702, 9008, -5179, -2443, 979, -3585, -7863, -9858, -9671 ));
        System.out.println(solve(B));
        System.out.println(solve1(B));
    }


    public static int solve(ArrayList<Integer> A) {
        int sum = 0, left_sum = 0, right_sum;
        for (int i: A) sum += i;
        for (int i = 0; i < A.size(); i++){
            right_sum = sum - A.get(i) - left_sum;
            if (left_sum == right_sum) return i;
            left_sum += A.get(i);
        }
        return -1;
    }

    /** Using prefix sum array. */
    public static int solve1(ArrayList<Integer> A){
        PrefixSumArray pfs = new PrefixSumArray();
        int[] pf = pfs.pfSumArray(A);
        int left, right;
        for (int i = 0; i < A.size(); i++){
            if (i == 0) {
                left = 0;
            }
            else {
                left = pf[i-1];
            }
            right = pf[A.size()-1] - pf[i];

            if (left == right) return i;
        }
        return -1;
    }
}

//You are given an array A of integers of size N.
//Your task is to find the equilibrium index of the given array
//The equilibrium index of an array is an index such that the sum of elements at
// lower indexes is equal to the sum of elements at higher indexes.
